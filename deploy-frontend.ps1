# Modulus LMS Deployment Script (PowerShell)
Write-Host "üöÄ Starting Modulus LMS Deployment..." -ForegroundColor Green

# Set AWS region
$env:AWS_DEFAULT_REGION = "eu-west-2"

# Build the application
Write-Host "üì¶ Building application..." -ForegroundColor Yellow
npm run build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Build failed!" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Build completed successfully!" -ForegroundColor Green

# Check if Docker is running
try {
    docker info | Out-Null
} catch {
    Write-Host "‚ùå Docker is not running. Please start Docker first." -ForegroundColor Red
    exit 1
}

# Build Docker image
Write-Host "üê≥ Building Docker image..." -ForegroundColor Yellow
docker build -t modulus-frontend .

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Docker build failed!" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Docker image built successfully!" -ForegroundColor Green

# Tag for ECR
$ECR_REGISTRY = "533267404533.dkr.ecr.eu-west-2.amazonaws.com"
$IMAGE_TAG = "latest"
$FULL_IMAGE_NAME = "$ECR_REGISTRY/modulus:$IMAGE_TAG"

Write-Host "üè∑Ô∏è Tagging image for ECR..." -ForegroundColor Yellow
docker tag modulus-frontend:latest $FULL_IMAGE_NAME

# Login to ECR
Write-Host "üîê Logging into ECR..." -ForegroundColor Yellow
$loginCommand = aws ecr get-login-password --region eu-west-2
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå ECR login command failed!" -ForegroundColor Red
    exit 1
}

$loginCommand | docker login --username AWS --password-stdin $ECR_REGISTRY

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå ECR login failed!" -ForegroundColor Red
    exit 1
}

# Push to ECR
Write-Host "‚¨ÜÔ∏è Pushing image to ECR..." -ForegroundColor Yellow
docker push $FULL_IMAGE_NAME

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Docker push failed!" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Image pushed to ECR successfully!" -ForegroundColor Green

# Update ECS service
Write-Host "üîÑ Updating ECS service..." -ForegroundColor Yellow
aws ecs update-service --cluster modulus-cluster --service modulus-service --force-new-deployment --region eu-west-2

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå ECS service update failed!" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ ECS service update initiated!" -ForegroundColor Green
Write-Host "‚è≥ Waiting for deployment to complete..." -ForegroundColor Yellow

# Wait for service to become stable
aws ecs wait services-stable --cluster modulus-cluster --services modulus-service --region eu-west-2

Write-Host "üéâ Deployment completed successfully!" -ForegroundColor Green
Write-Host "üåê Frontend should be available at: http://modulus-alb-2046761654.eu-west-2.elb.amazonaws.com" -ForegroundColor Cyan

# Test the deployment
Write-Host "üß™ Testing deployment..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

try {
    $response = Invoke-WebRequest -Uri "http://modulus-alb-2046761654.eu-west-2.elb.amazonaws.com" -TimeoutSec 30
    Write-Host "‚úÖ Frontend is responding!" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Frontend might still be starting up. Please check in a few minutes." -ForegroundColor Yellow
}

Write-Host "‚úÖ Deployment script completed!" -ForegroundColor Green
