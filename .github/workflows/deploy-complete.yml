# Modulus LMS - Complete Production Deployment Pipeline
# Full LMS infrastructure: Database, Storage, Monitoring, Security

name: "🚀 Deploy Complete Modulus LMS"

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      enable_database:
        description: 'Enable RDS PostgreSQL Database'
        required: false
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'
      enable_storage:
        description: 'Enable S3 File Storage'
        required: false
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'
      enable_monitoring:
        description: 'Enable CloudWatch Monitoring'
        required: false
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

env:
  AWS_REGION: eu-west-2
  ENABLE_RDS: ${{ github.event.inputs.enable_database || 'true' }}
  ENABLE_S3: ${{ github.event.inputs.enable_storage || 'true' }}
  ENABLE_MONITORING: ${{ github.event.inputs.enable_monitoring || 'true' }}

jobs:
  deploy:
    name: 🚀 Complete LMS Deployment
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: ⚙️ Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🧪 Test Build Locally
      run: |
        npm ci --legacy-peer-deps
        npm run build
        echo "✅ Local build successful, proceeding with complete deployment"

    - name: 🚀 Complete LMS Deployment
      env:
        ENABLE_RDS: ${{ env.ENABLE_RDS }}
        ENABLE_S3: ${{ env.ENABLE_S3 }}
        ENABLE_MONITORING: ${{ env.ENABLE_MONITORING }}
      run: |
        # Make deployment script executable
        chmod +x ./deploy-complete.sh
        
        # Run complete deployment with all features
        ./deploy-complete.sh

    - name: 📊 Deployment Summary
      run: |
        echo "🎉 Complete Modulus LMS deployment finished!"
        echo ""
        echo "🏗️ Infrastructure Deployed:"
        echo "  🌐 Application Load Balancer"
        echo "  🖥️  ECS Fargate Service"
        echo "  🗄️  RDS PostgreSQL Database: ${{ env.ENABLE_RDS }}"
        echo "  📦 S3 File Storage: ${{ env.ENABLE_S3 }}"
        echo "  📊 CloudWatch Monitoring: ${{ env.ENABLE_MONITORING }}"
        echo "  🔒 VPC Security Groups"
        echo "  📝 Application Logs"
        echo ""
        echo "🔗 Check AWS Console for ALB DNS name"
        echo "📍 Region: ${{ env.AWS_REGION }}"
        echo "⏱️ Allow 5-10 minutes for all services to initialize"
        echo ""
        echo "🎯 Features:"
        echo "  📚 Complete Learning Management System"
        echo "  👥 Multi-role dashboard (Student, Instructor, Admin)"
        echo "  🖥️ Virtual desktop environments"
        echo "  🏆 Gamification and achievements"
        echo "  📊 Analytics and reporting"
        echo "  🔐 Secure user management"
